#include <stdio.h>
#include <stdlib.h>
#include <gsl/gsl_rng.h>
#include <time.h>
#include <gsl/gsl_matrix.h>

int main()
{
    int i,j, element;
    gsl_matrix *m1;
    m1=gsl_matrix_alloc(5,5);
    printf("Vnesi elementi za prvata matrica:\n");
    for(i=0; i<5; i++)
    {
        for(j=0; j<5; j++)
        {
            printf("Vnesi element za m1[%d][%d]:", i, j);
            scanf("%d", &element);
            gsl_matrix_set(m1, i, j, element);
            printf("Vnesen element: %d\n", gsl_matrix_get(m1,i,j));
        }
    }

    gsl_matrix *m2;
    m2=gsl_matrix_alloc(5,5);
    gsl_rng *r;
    int izbor;
    gsl_rng_env_setup();
    r=gsl_rng_alloc(gsl_rng_default);
    gsl_rng_set(r, time(0));
    printf("Generiranje elementi za vtorata matrica:\n");
    for(i=0; i<5; i++)
    {
	for(j=0; j<5; j++)
        {
               double u=gsl_rng_uniform(r);
               izbor=((int)(u*1000))%1000 + 1;
               gsl_matrix_set(m2, i, j, izbor);
	       printf("m2[%d][%d]=%d\n", i, j, izbor);
        }
    }


    int brojac=0;
    for(i=0; i<5; i++)
    {
         for(j=0; j<5; j++)
         {
               if(gsl_matrix_get(m1, i, j)==gsl_matrix_get(m2, i, j))
               {
                    brojac++;
               }
         }
    }

    float procent=(brojac*100)/25;
    printf("\nProcentot na isti elementi e: %.2f%%\n", procent);

    gsl_matrix_free(m1);
    gsl_matrix_free(m2);
    gsl_rng_free(r);

    return 0;
}